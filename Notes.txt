#############################################################################################
-------------------------------------GETTING-STARTED-----------------------------------------
#############################################################################################
1. Installing Vue and tools:
	1.1 Installing Vue and Vuter;
	1.2 Creating the project using a example template;

2. Structuring the application:
	2.1 Talking about islint (variables and webpack config);
	2.2 Printing the data informations using v-for;
	2.3 Applying a Theme a scoped css styling;
	2.4 Important: Scoped css files makes the project more scalable;
	2.5 Css frameworks must be imported globaly;
#############################################################################################
----------------------------------------ROUTING-IN-VUE---------------------------------------
#############################################################################################
3. Using view Router to map components:
	3.1 Flux just like React apps;
	3.2 Using history mode to avoid reload;
	3.3 Creating a component to se the threads (Attention to props getting id);
	3.4 Importing new components inside components;
	3.5 Getting the values of replies using Object.key(length);
	3.6 Good practice -> Computed properties to count anything in the app; (reusability)
	3.7 Creating a user (computed properties) to be easier readable;
4. Routing:
	4.1 <router-link> It seems line Link from React;
	4.2 Good practice -> passing the name of the component and the params in the method;
	4.2.1 It allow us to change the router but it still works;
	4.3 Renaming components to be different from the pages Ex: PageHome.vue;
	4.4 Webpack configuration is set to resolve('src') as an absolute path;
	4.4.1 Creating a alias is good to set an absolute path configuration;
	4.5 Good practice -> Creating a Notfound router to the Home page using (*);
	4.6 Using CSS Modules to create unique styles for each page;
	4.7 Good practice -> Using CamelCase in module styles to avoid using [];

